/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

pipeline {
    environment {
        log_dir = "${sh(script:'TZ=UTC-8 date +%Y%m%d_%H%M%S | xargs echo -n', returnStdout: true)}"
    }
    // agent config; for data infra, this should always be `kubernetes {}`
    agent {kubernetes {
            // jenkins agent won't provide build environment for you, your need declare all rely environment on  agent kubernetes
            // you can denfine all containers you need during ci
            // here we declare two containers we will use in the process of ci
            // golang: use to build go binary
            // kaniko: use to push image to harbor(all image push will use kaniko on jenkins)
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: kubectl
    image: bitnami/kubectl:1.22.5
    imagePullPolicy: Always
    command: ["cat"]
    tty: true
"""
    }} 
    // set this options to output time on console log
    options { timestamps () }
    stages { // stages to execute
        stage("Pull SourceCode") {
            steps {
                // checkout step config checkout options for jenkins agent, jenkins agent will use this scm config to execute all ci stage
                // if your jenkinsfile branch is same to branch your want to build. your can easily use `checkout scm` to instead below checkout codes.
                checkout(
                    [
                        $class: 'GitSCM',
                        branches: [[name: "*/master"]],
                        userRemoteConfigs: [
                            [
                                credentialsId: 'jenkins-gitlab-credential', // gitlab credential id                                
                                url: 'gitlab@git.garena.com:shopee/data-infra/hbase-group/workload_benchmark_configs.git'
                            ]
                            ]
                    ]
                )
            }
        }

        stage("Deploy the job to the test k8s") {
            steps {
                withKubeConfig([credentialsId: 'hbase-k8s',contextName: 'app.di-hbase-auto@kube-test01-general-at']) {
                    container('kubectl') {    
                    // set parallelism 
                    sh """
                       sed -i 's/<parallelism>/${parallelism}/g' workload_job.yml
                       sed -i 's/<workload_type>/${workload_type}/g' workload_job.yml
                       sed -i 's/<size>/${size}/g' workload_job.yml
                       sed -i 's/<mix_type>/${mix_type}/g' workload_job.yml
                       sed -i 's/<log_dir>/${log_dir}/g' workload_job.yml
                       """
                    sh "cat workload_job.yml"
                    // start job                    
                    sh "kubectl get po -n di-hbase-auto"
                    sh "kubectl replace --force -f workload_job.yml"
                    sh "kubectl get po -n di-hbase-auto"

                    // print k8s job log url
                    // print hbase-driver log url  
                    sh """
                    echo 'k8s pods log url https://dashboard.kube-test.data-infra.shopee.io/#/log/di-hbase-auto/workload/job?namespace=di-hbase-auto&container=aries-workload'
                    curl -i -X POST -H 'Content-Type: application/json' -d '{ "tag": "text", "text": {"content": "Workload-Benchmark k8s pods log url https://dashboard.kube-test.data-infra.shopee.io/#/log/di-hbase-auto/workload/job?namespace=di-hbase-auto&container=aries-workload"}}' https://openapi.seatalk.io/webhook/group/Vvt2ozXjRaWTl5zMnqegvw                                 
                    echo 'Pods logs can be also found here after the job have be completed'
                    echo "http://hbase-driver.data-infra.shopee.io/logs/hbase-workload/${log_dir}"
                    curl -i -X POST -H 'Content-Type: application/json' -d '{ "tag": "text", "text": {"content": "Workload-Benchmark hbase-driver log url http://hbase-driver.data-infra.shopee.io/logs/hbase-workload/${log_dir}"}}' https://openapi.seatalk.io/webhook/group/Vvt2ozXjRaWTl5zMnqegvw
                    """
                    }          
                }  

            }
        }
    }
}
